services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka:9092,LISTENER_EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OPTS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-1.1.0.jar=9998:/opt/jmx_exporter/jmx_exporter.yml"
    volumes:
      - ./kafka/jmx_exporter/jmx_prometheus_javaagent-1.1.0.jar:/opt/jmx_exporter/jmx_prometheus_javaagent-1.1.0.jar
      - ./kafka/jmx_exporter/jmx_exporter.yml:/opt/jmx_exporter/jmx_exporter.yml
    healthcheck:
      test: ["CMD", "sh", "-c", "unset KAFKA_OPTS && unset JMX_PORT && kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 15s
      timeout: 5s
      retries: 15

  my-python-producer:
    image: mpradeep954/fetch-de-data-gen
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure:10
    ports:
      - 9093:9093
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: user-login
    networks:
      - kafka-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - kafka-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - kafka-network
    restart: unless-stopped

  kafka-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      BROKER: "kafka:9092"  # Kafka broker address
      INPUT_TOPIC: "user-login"
      KAFKA_TOPIC_ANALYTICS: "user_login_analytics"
      BOOTSTRAP_SERVERS: "kafka:9092"
    restart: on-failure:10
    depends_on:
      - my-python-producer
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
